version: "3"

services:
  #client_bots:
    #image: hellodudu86/client_bots
    #container_name: client_bots
    #command: "-config_file=config/client_bots/config.toml"
    #volumes:
      #- "./config/client_bots/:/app/config/client_bots"
      #- "./config/cert/:/app/config/cert"
  
  game:
    image: hellodudu86/game
    container_name: game
    command: "-config_file=config/game/config.toml"
    ports:
      - "7030:7030"
      - "8080:8080"
    volumes:
      - "./config/game/:/app/server/config/game"
      - "./config/cert/:/app/server/config/cert"
      - "./config/excel/:/app/server/config/excel"
    environment:
      MICRO_REGISTRY: "mdns"
      # MICRO_REGISTRY_ADDRESS: "consul:8500"
      # MICRO_BROKER: "nsq"
      # MICRO_BROKER_ADDRESS: "nsqd:4150"
      DB_DSN: "mongodb://host.docker.internal:27017"
      # REDIS_ADDR: "rejson:6379"
    # depends_on:
      # - "consul"
      # - "nsqd"
      # - "loki"
      # - "mongo"
    # logging:
    #   driver: loki
    #   options:
    #     loki-url: http://host.docker.internal:3100/api/prom/push
    #     loki-retries: "5"
    #     loki-batch-size: "400"


  gate:
    image: hellodudu86/gate
    container_name: gate
    command: "-config_file=config/gate/config.toml"
    volumes:
      - "./config/gate/:/app/server/config/gate"
      - "./config/cert/:/app/server/config/cert"
      - "./config/excel/:/app/server/config/excel"
    ports:
      - "80:80"
      - "443:443"
    environment:
      MICRO_REGISTRY: "mdns"
      # MICRO_REGISTRY_ADDRESS: "consul:8500"
      # MICRO_BROKER: "nsq"
      # MICRO_BROKER_ADDRESS: "nsqd:4150"
      # MICRO_SYNC_NODE_ADDRESS: "consul:8500"
      DB_DSN: "mongodb://host.docker.internal:27017"
      # REDIS_ADDR: "rejson:6379"
    # depends_on:
      # - "consul"
      # - "nsqd"
      # - "loki"
      # - "mongo"
    # logging:
    #   driver: loki
    #   options:
    #     loki-url: http://host.docker.internal:3100/api/prom/push
    #     loki-retries: "5"
    #     loki-batch-size: "400"

  mail:
    image: hellodudu86/mail
    container_name: mail
    command: "-config_file=config/mail/config.toml"
    ports:
      - "8180:8180"
    volumes:
      - "./config/mail/:/app/server/config/mail"
      - "./config/cert/:/app/server/config/cert"
      - "./config/excel/:/app/server/config/excel"
    environment:
      MICRO_REGISTRY: "mdns"
      # MICRO_REGISTRY_ADDRESS: "consul:8500"
      # MICRO_BROKER: "nsq"
      # MICRO_BROKER_ADDRESS: "nsqd:4150"
      DB_DSN: "mongodb://host.docker.internal:27017"
      # REDIS_ADDR: "rejson:6379"
    # depends_on:
      # - "consul"
      # - "nsqd"
      # - "loki"
      # - "mongo"
        
  # mongo:
  #   image: mongo
  #   container_name: mongo
  #   restart: always
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - ./config/mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
  #     - ./data/database/:/data/db
    # logging:
    #   driver: loki
    #   options:
    #     loki-url: http://host.docker.internal:3100/api/prom/push
    #     loki-retries: "5"
    #     loki-batch-size: "400"

  # rejson:
  #   image: redislabs/rejson
  #   command: 
  #     - /usr/local/etc/redis/redis.conf 
  #     - --loadmodule /usr/lib/redis/modules/rejson.so
  #   container_name: rejson
  #   ports:
  #     - 6379:6379
  #   volumes:
  #     - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf
  #     - ./data/redis/:/data
  #   healthcheck:
  #     test: ["CMD", "redis-cli","ping"]
  #     interval: 20s
  #     timeout: 1s
  #     retries: 20
    # depends_on:
    #   - loki
    # logging:
    #   driver: loki
    #   options:
    #     loki-url: http://host.docker.internal:3100/api/prom/push
    #     loki-retries: "5"
    #     loki-batch-size: "400"

  # consul:
  #   image: consul
  #   command: "agent -server -bootstrap-expect=1 -bind=127.0.0.1 -enable-local-script-checks -log-level=info -config-dir=/config/consul -data-dir=/consul_data -ui -client=0.0.0.0"
  #   container_name: consul
  #   ports:
  #     - "8500:8500"
  #   volumes:
  #     - "./config/consul/:/config/consul/"
  #     - "./data/consul/:/consul_data"
    # depends_on:
    #   - loki
    # logging:
    #   driver: loki
    #   options:
    #     loki-url: http://host.docker.internal:3100/api/prom/push
    #     loki-retries: "5"
    #     loki-batch-size: "400"

  # nsqlookupd:
  #   image: nsqio/nsq
  #   command: /nsqlookupd -log-level=info
  #   container_name: nsqlookupd
  #   logging:
  #     driver: loki
  #     options:
  #       loki-url: http://host.docker.internal:3100/api/prom/push
  #       loki-retries: "5"
  #       loki-batch-size: "400"
  #   depends_on:
  #     - loki
  #   ports:
  #     - "4160:4160"
  #     - "4161:4161"

  # nsqd:
  #   image: nsqio/nsq
  #   command: /nsqd --data-path=/nsq_data -log-level=info -lookupd-tcp-address=nsqlookupd:4160 
  #   container_name: nsqd
  #   volumes:
  #     - "./data/nsq/:/nsq_data"
  #   ports:
  #     - "4150:4150"
  #     - "4151:4151"
  #   logging:
  #     driver: loki
  #     options:
  #       loki-url: http://host.docker.internal:3100/api/prom/push
  #       loki-retries: "5"
  #       loki-batch-size: "400"

  #   depends_on:
  #     - nsqlookupd
  #     - nsqadmin
  #     - loki

  # nsqadmin:
  #   image: nsqio/nsq
  #   command: /nsqadmin -lookupd-http-address=nsqlookupd:4161
  #   container_name: nsqadmin
  #   depends_on:
  #     - nsqlookupd  
  #     - loki
  #   ports:
  #     - "4171:4171"
  #   logging:
  #     driver: loki
  #     options:
  #       loki-url: http://host.docker.internal:3100/api/prom/push
  #       loki-retries: "5"
  #       loki-batch-size: "400"


  # loki:
  #   image: grafana/loki:v1.3.0
  #   container_name: loki
  #   ports:
  #     - "3100:3100"
  #   volumes:
  #     - ./config/loki/:/etc/loki
  #     - ./data/loki/:/tmp/loki
  #   command: -config.file=/etc/loki/loki-local-config.yaml
  #   restart: unless-stopped
  #   depends_on:
  #     - grafana

  # promtail:
  #   image: grafana/promtail
  #   container_name: promtail
  #   volumes:
  #     - ./config/promtail/:/etc/promtail
  #     - /var/log:/var/log
  #   command:
  #     -config.file=/etc/promtail/promtail-docker-config.yaml

  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana
  #   volumes:
  #       - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini
  #       - ./data/grafana/:/var/lib/grafana/
  #   ports:
  #       - "3000:3000"
  #   user: "472"
  #   environment:
  #     GF_EXPLORE_ENABLED: "true"
    # logging:
    #   driver: loki
    #   options:
    #     loki-url: http://host.docker.internal:3100/api/prom/push
    #     loki-retries: "5"
    #     loki-batch-size: "400"

  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   ports:
  #       - "9090:9090"
  #   command:
  #       - --config.file=/etc/prometheus/prometheus.yml
  #   volumes:
  #       - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #       - ./data/prometheus:/prometheus

  # node-exporter:
  #   image: quay.io/prometheus/node-exporter
  #   container_name: node-exporter
  #   volumes:
  #       - /:/host:ro
  #   hostname: "macbook pro 2017"
  #   restart: always
  #   ports:
  #       - "9100:9100"

    
